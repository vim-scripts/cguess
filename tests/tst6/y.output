Grammar

    0 $accept: nested_x $end

    1 nested_x: x
    2         | y x
    3         | y s x
    4         | s x

    5 s: x y
    6  | s x y


Terminals, with rules where they appear

$end (0) 0
error (256)
x (258) 1 2 3 4 5 6
y (259) 2 3 5 6


Nonterminals, with rules where they appear

$accept (5)
    on left: 0
nested_x (6)
    on left: 1 2 3 4, on right: 0
s (7)
    on left: 5 6, on right: 3 4 6


state 0

    0 $accept: . nested_x $end

    x  shift, and go to state 1
    y  shift, and go to state 2

    nested_x  go to state 3
    s         go to state 4


state 1

    1 nested_x: x .
    5 s: x . y

    y  shift, and go to state 5

    $default  reduce using rule 1 (nested_x)


state 2

    2 nested_x: y . x
    3         | y . s x

    x  shift, and go to state 6

    s  go to state 7


state 3

    0 $accept: nested_x . $end

    $end  shift, and go to state 8


state 4

    4 nested_x: s . x
    6 s: s . x y

    x  shift, and go to state 9


state 5

    5 s: x y .

    $default  reduce using rule 5 (s)


state 6

    2 nested_x: y x .
    5 s: x . y

    y  shift, and go to state 5

    $default  reduce using rule 2 (nested_x)


state 7

    3 nested_x: y s . x
    6 s: s . x y

    x  shift, and go to state 10


state 8

    0 $accept: nested_x $end .

    $default  accept


state 9

    4 nested_x: s x .
    6 s: s x . y

    y  shift, and go to state 11

    $default  reduce using rule 4 (nested_x)


state 10

    3 nested_x: y s x .
    6 s: s x . y

    y  shift, and go to state 11

    $default  reduce using rule 3 (nested_x)


state 11

    6 s: s x y .

    $default  reduce using rule 6 (s)
